[project]
name = "github-changelog-md"
version = "0.9.5"
description = "Generate a Markdown Changelog from your Github repository."
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
  "pygithub>=2.4.0",
  "rich>=13.9.4",
  "rtoml>=0.11.0",
  "simple-toml-settings>=0.8.0",
  "typer>=0.12.5",
]
license = "MIT"
authors = [{ name = "Grant Ramsay", email = "seapagan@gmail.com" }]

[project.scripts]
github-changelog-md = "github_changelog_md.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
"homepage" = "https://changelog.seapagan.net"
"repository" = "https://github.com/seapagan/github-changelog-md"
"Pull Requests" = "https://github.com/seapagan/github-changelog-md/pulls"
"Bug Tracker" = "https://github.com/seapagan/github-changelog-md/issues"
"Changelog" = "https://github.com/seapagan/github-changelog-md/blob/main/CHANGELOG.md"

[tool.uv]
dev-dependencies = [
  "faker>=30.8.2",
  "mock>=5.1.0",
  "mypy>=1.13.0",
  "poethepoet>=0.29.0",
  "pre-commit>=4.0.1",
  "pyfakefs>=5.7.1",
  "pymarkdownlnt>=0.9.24",
  "pytest>=8.3.3",
  "pytest-cov>=6.0.0",
  "pytest-mock>=3.14.0",
  "pytest-randomly>=3.16.0",
  "pytest-reverse>=1.8.0",
  "pytest-sugar>=1.0.0",
  "pytest-xdist>=3.6.1",
  "ruff>=0.7.2",
  "mkdoc>=0.1",
  "mkdocs-git-revision-date-localized-plugin>=1.3.0",
  "mkdocs-autorefs>=1.2.0",
  "mkdocs-material>=9.5.44",
  "mkdocs-minify-plugin>=0.8.0",
  "pymdown-extensions>=10.12",
  "pygments>=2.18.0",
]

[tool.poe.tasks]
# setup PoeThePoet tasks
pre.cmd = "pre-commit run --all-files"
pre.help = "Run pre-commit checks"
mypy.cmd = "mypy . --strict --exclude site --exclude docs"
mypy.help = "Run mypy checks"
format.help = "Format code with Ruff"
format.cmd = "ruff format ."
ruff.help = "Run Ruff checks"
ruff.cmd = "ruff check ."
test.help = "Run tests using Pytest"
test.cmd = "pytest"
markdown.cmd = "pymarkdown scan  -r github_changelog_md/**/*.md docs/**/*.md"
markdown.help = "Run markdown checks"

# run all linting checks in sequence. we want to run them all, even if one fails
lint.ignore_fail = "return_non_zero"
lint.sequence = ["format", "ruff", "mypy", "markdown"]
lint.help = "Run all linting checks"

"docs:publish".cmd = "mkdocs gh-deploy"
"docs:publish".help = "Publish documentation to GitHub Pages"
"docs:build".cmd = "mkdocs build"
"docs:build".help = "Build documentation locally to './site' folder"
"docs:serve".cmd = "mkdocs serve -w TODO.md -w CHANGELOG.md -w CONTRIBUTING.md"
"docs:serve".help = "Serve documentation locally"
"docs:serve:all".cmd = "mkdocs serve -w TODO.md -w CHANGELOG.md -w CONTRIBUTING.md -a 0.0.0.0:8000"
"docs:serve:all".help = "Serve documentation locally on all interfaces"

changelog.cmd = "github-changelog-md"
changelog.help = "Generate the CHANGELOG.md file"

# configure assorted tools and linters
[tool.pymarkdown]
plugins.md014.enabled = false
plugins.md036.enabled = false
plugins.md046.enabled = false

[tool.pytest.ini_options]
addopts = ["--cov", "--cov-report", "term-missing", "--cov-report", "html"]
filterwarnings = []
mock_use_standalone_module = true
pythonpath = ["github_changelog_md"]

[tool.coverage.run]
source = ["github_changelog_md"]
omit = ["*/tests/*"]

[tool.ruff]
line-length = 80

src = ["github_changelog_md"]
target-version = "py39"       # minimum python version supported

[tool.ruff.lint]
select = ["ALL"] # we are being very strict!
ignore = [
  "PGH003",
  "FBT002",
  "FBT003",
  "B006",
] # These rules are too strict even for us üòù
extend-ignore = ["COM812", "ISC001"] # these are ignored for ruff formatting

[tool.ruff.lint.isort]
known-first-party = ["github_changelog_md"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
  "S101",   # we can (and MUST!) use 'assert' in test files.
  "ANN001", # annotations for fixtures are sometimes a pain for test files.
]
"github_changelog_md/main.py" = [
  "UP007",
  "PLR0913",
] # These cause issues in Typer Apps

[tool.ruff.format]
indent-style = "space"
quote-style = "double"

[[tool.mypy.overrides]]
disable_error_code = ["method-assign", "no-untyped-def", "attr-defined"]
module = "tests.*"
